{
  "version": 3,
  "sources": ["../node_modules/hono/dist/utils/url.js", "../node_modules/hono/dist/utils/cookie.js", "../node_modules/hono/dist/utils/stream.js", "../node_modules/hono/dist/context.js", "../node_modules/hono/dist/compose.js", "../node_modules/hono/dist/http-exception.js", "../node_modules/hono/dist/utils/body.js", "../node_modules/hono/dist/request.js", "../node_modules/hono/dist/router.js", "../node_modules/hono/dist/hono-base.js", "../node_modules/hono/dist/router/reg-exp-router/node.js", "../node_modules/hono/dist/router/reg-exp-router/trie.js", "../node_modules/hono/dist/router/reg-exp-router/router.js", "../node_modules/hono/dist/router/smart-router/router.js", "../node_modules/hono/dist/router/trie-router/node.js", "../node_modules/hono/dist/router/trie-router/router.js", "../node_modules/hono/dist/hono.js", "../node_modules/@ifyour/deeplx/src/const.ts", "../node_modules/@ifyour/deeplx/src/query.ts", "../src/index.ts"],
  "sourceRoot": "dist",
  "sourcesContent": ["// src/utils/url.ts\nvar splitPath = (path) => {\n  const paths = path.split(\"/\");\n  if (paths[0] === \"\") {\n    paths.shift();\n  }\n  return paths;\n};\nvar splitRoutingPath = (path) => {\n  const groups = [];\n  for (let i = 0; ; ) {\n    let replaced = false;\n    path = path.replace(/\\{[^}]+\\}/g, (m) => {\n      const mark = `@\\\\${i}`;\n      groups[i] = [mark, m];\n      i++;\n      replaced = true;\n      return mark;\n    });\n    if (!replaced) {\n      break;\n    }\n  }\n  const paths = path.split(\"/\");\n  if (paths[0] === \"\") {\n    paths.shift();\n  }\n  for (let i = groups.length - 1; i >= 0; i--) {\n    const [mark] = groups[i];\n    for (let j = paths.length - 1; j >= 0; j--) {\n      if (paths[j].indexOf(mark) !== -1) {\n        paths[j] = paths[j].replace(mark, groups[i][1]);\n        break;\n      }\n    }\n  }\n  return paths;\n};\nvar patternCache = {};\nvar getPattern = (label) => {\n  if (label === \"*\") {\n    return \"*\";\n  }\n  const match = label.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n  if (match) {\n    if (!patternCache[label]) {\n      if (match[2]) {\n        patternCache[label] = [label, match[1], new RegExp(\"^\" + match[2] + \"$\")];\n      } else {\n        patternCache[label] = [label, match[1], true];\n      }\n    }\n    return patternCache[label];\n  }\n  return null;\n};\nvar getPath = (request) => {\n  const match = request.url.match(/^https?:\\/\\/[^/]+(\\/[^?]*)/);\n  return match ? match[1] : \"\";\n};\nvar getQueryStrings = (url) => {\n  const queryIndex = url.indexOf(\"?\", 8);\n  return queryIndex === -1 ? \"\" : \"?\" + url.slice(queryIndex + 1);\n};\nvar getPathNoStrict = (request) => {\n  const result = getPath(request);\n  return result.length > 1 && result[result.length - 1] === \"/\" ? result.slice(0, -1) : result;\n};\nvar mergePath = (...paths) => {\n  let p = \"\";\n  let endsWithSlash = false;\n  for (let path of paths) {\n    if (p[p.length - 1] === \"/\") {\n      p = p.slice(0, -1);\n      endsWithSlash = true;\n    }\n    if (path[0] !== \"/\") {\n      path = `/${path}`;\n    }\n    if (path === \"/\" && endsWithSlash) {\n      p = `${p}/`;\n    } else if (path !== \"/\") {\n      p = `${p}${path}`;\n    }\n    if (path === \"/\" && p === \"\") {\n      p = \"/\";\n    }\n  }\n  return p;\n};\nvar checkOptionalParameter = (path) => {\n  const match = path.match(/^(.+|)(\\/\\:[^\\/]+)\\?$/);\n  if (!match)\n    return null;\n  const base = match[1];\n  const optional = base + match[2];\n  return [base === \"\" ? \"/\" : base.replace(/\\/$/, \"\"), optional];\n};\nvar _decodeURI = (value) => {\n  if (!/[%+]/.test(value)) {\n    return value;\n  }\n  if (value.indexOf(\"+\") !== -1) {\n    value = value.replace(/\\+/g, \" \");\n  }\n  return /%/.test(value) ? decodeURIComponent_(value) : value;\n};\nvar _getQueryParam = (url, key, multiple) => {\n  let encoded;\n  if (!multiple && key && !/[%+]/.test(key)) {\n    let keyIndex2 = url.indexOf(`?${key}`, 8);\n    if (keyIndex2 === -1) {\n      keyIndex2 = url.indexOf(`&${key}`, 8);\n    }\n    while (keyIndex2 !== -1) {\n      const trailingKeyCode = url.charCodeAt(keyIndex2 + key.length + 1);\n      if (trailingKeyCode === 61) {\n        const valueIndex = keyIndex2 + key.length + 2;\n        const endIndex = url.indexOf(\"&\", valueIndex);\n        return _decodeURI(url.slice(valueIndex, endIndex === -1 ? void 0 : endIndex));\n      } else if (trailingKeyCode == 38 || isNaN(trailingKeyCode)) {\n        return \"\";\n      }\n      keyIndex2 = url.indexOf(`&${key}`, keyIndex2 + 1);\n    }\n    encoded = /[%+]/.test(url);\n    if (!encoded) {\n      return void 0;\n    }\n  }\n  const results = {};\n  encoded ?? (encoded = /[%+]/.test(url));\n  let keyIndex = url.indexOf(\"?\", 8);\n  while (keyIndex !== -1) {\n    const nextKeyIndex = url.indexOf(\"&\", keyIndex + 1);\n    let valueIndex = url.indexOf(\"=\", keyIndex);\n    if (valueIndex > nextKeyIndex && nextKeyIndex !== -1) {\n      valueIndex = -1;\n    }\n    let name = url.slice(\n      keyIndex + 1,\n      valueIndex === -1 ? nextKeyIndex === -1 ? void 0 : nextKeyIndex : valueIndex\n    );\n    if (encoded) {\n      name = _decodeURI(name);\n    }\n    keyIndex = nextKeyIndex;\n    if (name === \"\") {\n      continue;\n    }\n    let value;\n    if (valueIndex === -1) {\n      value = \"\";\n    } else {\n      value = url.slice(valueIndex + 1, nextKeyIndex === -1 ? void 0 : nextKeyIndex);\n      if (encoded) {\n        value = _decodeURI(value);\n      }\n    }\n    if (multiple) {\n      ;\n      (results[name] ?? (results[name] = [])).push(value);\n    } else {\n      results[name] ?? (results[name] = value);\n    }\n  }\n  return key ? results[key] : results;\n};\nvar getQueryParam = _getQueryParam;\nvar getQueryParams = (url, key) => {\n  return _getQueryParam(url, key, true);\n};\nvar decodeURIComponent_ = decodeURIComponent;\nexport {\n  checkOptionalParameter,\n  decodeURIComponent_,\n  getPath,\n  getPathNoStrict,\n  getPattern,\n  getQueryParam,\n  getQueryParams,\n  getQueryStrings,\n  mergePath,\n  splitPath,\n  splitRoutingPath\n};\n", "// src/utils/cookie.ts\nimport { decodeURIComponent_ } from \"./url.js\";\nvar algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\nvar getCryptoKey = async (secret) => {\n  const secretBuf = typeof secret === \"string\" ? new TextEncoder().encode(secret) : secret;\n  return await crypto.subtle.importKey(\"raw\", secretBuf, algorithm, false, [\"sign\", \"verify\"]);\n};\nvar makeSignature = async (value, secret) => {\n  const key = await getCryptoKey(secret);\n  const signature = await crypto.subtle.sign(algorithm.name, key, new TextEncoder().encode(value));\n  return btoa(String.fromCharCode(...new Uint8Array(signature)));\n};\nvar verifySignature = async (base64Signature, value, secret) => {\n  try {\n    const signatureBinStr = atob(base64Signature);\n    const signature = new Uint8Array(signatureBinStr.length);\n    for (let i = 0; i < signatureBinStr.length; i++)\n      signature[i] = signatureBinStr.charCodeAt(i);\n    return await crypto.subtle.verify(algorithm, secret, signature, new TextEncoder().encode(value));\n  } catch (e) {\n    return false;\n  }\n};\nvar validCookieNameRegEx = /^[\\w!#$%&'*.^`|~+-]+$/;\nvar validCookieValueRegEx = /^[ !#-:<-[\\]-~]*$/;\nvar parse = (cookie, name) => {\n  const pairs = cookie.trim().split(\";\");\n  return pairs.reduce((parsedCookie, pairStr) => {\n    pairStr = pairStr.trim();\n    const valueStartPos = pairStr.indexOf(\"=\");\n    if (valueStartPos === -1)\n      return parsedCookie;\n    const cookieName = pairStr.substring(0, valueStartPos).trim();\n    if (name && name !== cookieName || !validCookieNameRegEx.test(cookieName))\n      return parsedCookie;\n    let cookieValue = pairStr.substring(valueStartPos + 1).trim();\n    if (cookieValue.startsWith('\"') && cookieValue.endsWith('\"'))\n      cookieValue = cookieValue.slice(1, -1);\n    if (validCookieValueRegEx.test(cookieValue))\n      parsedCookie[cookieName] = decodeURIComponent_(cookieValue);\n    return parsedCookie;\n  }, {});\n};\nvar parseSigned = async (cookie, secret, name) => {\n  const parsedCookie = {};\n  const secretKey = await getCryptoKey(secret);\n  for (const [key, value] of Object.entries(parse(cookie, name))) {\n    const signatureStartPos = value.lastIndexOf(\".\");\n    if (signatureStartPos < 1)\n      continue;\n    const signedValue = value.substring(0, signatureStartPos);\n    const signature = value.substring(signatureStartPos + 1);\n    if (signature.length !== 44 || !signature.endsWith(\"=\"))\n      continue;\n    const isVerified = await verifySignature(signature, signedValue, secretKey);\n    parsedCookie[key] = isVerified ? signedValue : false;\n  }\n  return parsedCookie;\n};\nvar _serialize = (name, value, opt = {}) => {\n  let cookie = `${name}=${value}`;\n  if (opt && typeof opt.maxAge === \"number\" && opt.maxAge >= 0) {\n    cookie += `; Max-Age=${Math.floor(opt.maxAge)}`;\n  }\n  if (opt.domain) {\n    cookie += `; Domain=${opt.domain}`;\n  }\n  if (opt.path) {\n    cookie += `; Path=${opt.path}`;\n  }\n  if (opt.expires) {\n    cookie += `; Expires=${opt.expires.toUTCString()}`;\n  }\n  if (opt.httpOnly) {\n    cookie += \"; HttpOnly\";\n  }\n  if (opt.secure) {\n    cookie += \"; Secure\";\n  }\n  if (opt.sameSite) {\n    cookie += `; SameSite=${opt.sameSite}`;\n  }\n  if (opt.partitioned) {\n    cookie += \"; Partitioned\";\n  }\n  return cookie;\n};\nvar serialize = (name, value, opt = {}) => {\n  value = encodeURIComponent(value);\n  return _serialize(name, value, opt);\n};\nvar serializeSigned = async (name, value, secret, opt = {}) => {\n  const signature = await makeSignature(value, secret);\n  value = `${value}.${signature}`;\n  value = encodeURIComponent(value);\n  return _serialize(name, value, opt);\n};\nexport {\n  parse,\n  parseSigned,\n  serialize,\n  serializeSigned\n};\n", "// src/utils/stream.ts\nvar StreamingApi = class {\n  constructor(writable) {\n    this.writable = writable;\n    this.writer = writable.getWriter();\n    this.encoder = new TextEncoder();\n  }\n  async write(input) {\n    try {\n      if (typeof input === \"string\") {\n        input = this.encoder.encode(input);\n      }\n      await this.writer.write(input);\n    } catch (e) {\n    }\n    return this;\n  }\n  async writeln(input) {\n    await this.write(input + \"\\n\");\n    return this;\n  }\n  sleep(ms) {\n    return new Promise((res) => setTimeout(res, ms));\n  }\n  async close() {\n    try {\n      await this.writer.close();\n    } catch (e) {\n    }\n  }\n  async pipe(body) {\n    this.writer.releaseLock();\n    await body.pipeTo(this.writable, { preventClose: true });\n    this.writer = this.writable.getWriter();\n  }\n};\nexport {\n  StreamingApi\n};\n", "// src/context.ts\nimport { serialize } from \"./utils/cookie.js\";\nimport { StreamingApi } from \"./utils/stream.js\";\nvar TEXT_PLAIN = \"text/plain; charset=UTF-8\";\nvar Context = class {\n  constructor(req, options) {\n    this.env = {};\n    this._var = {};\n    this.finalized = false;\n    this.error = void 0;\n    this._status = 200;\n    this._h = void 0;\n    this._pH = void 0;\n    this._init = true;\n    this._renderer = (content) => this.html(content);\n    this.notFoundHandler = () => new Response();\n    this.render = (...args) => this._renderer(...args);\n    this.setRenderer = (renderer) => {\n      this._renderer = renderer;\n    };\n    this.header = (name, value, options) => {\n      if (value === void 0) {\n        if (this._h) {\n          this._h.delete(name);\n        } else if (this._pH) {\n          delete this._pH[name.toLocaleLowerCase()];\n        }\n        if (this.finalized) {\n          this.res.headers.delete(name);\n        }\n        return;\n      }\n      if (options?.append) {\n        if (!this._h) {\n          this._init = false;\n          this._h = new Headers(this._pH);\n          this._pH = {};\n        }\n        this._h.append(name, value);\n      } else {\n        if (this._h) {\n          this._h.set(name, value);\n        } else {\n          this._pH ?? (this._pH = {});\n          this._pH[name.toLowerCase()] = value;\n        }\n      }\n      if (this.finalized) {\n        if (options?.append) {\n          this.res.headers.append(name, value);\n        } else {\n          this.res.headers.set(name, value);\n        }\n      }\n    };\n    this.status = (status) => {\n      this._init = false;\n      this._status = status;\n    };\n    this.set = (key, value) => {\n      this._var ?? (this._var = {});\n      this._var[key] = value;\n    };\n    this.get = (key) => {\n      return this._var ? this._var[key] : void 0;\n    };\n    this.newResponse = (data, arg, headers) => {\n      if (this._init && !headers && !arg && this._status === 200) {\n        return new Response(data, {\n          headers: this._pH\n        });\n      }\n      if (arg && typeof arg !== \"number\") {\n        const res = new Response(data, arg);\n        const contentType = this._pH?.[\"content-type\"];\n        if (contentType) {\n          res.headers.set(\"content-type\", contentType);\n        }\n        return res;\n      }\n      const status = arg ?? this._status;\n      this._pH ?? (this._pH = {});\n      this._h ?? (this._h = new Headers());\n      for (const [k, v] of Object.entries(this._pH)) {\n        this._h.set(k, v);\n      }\n      if (this._res) {\n        this._res.headers.forEach((v, k) => {\n          this._h?.set(k, v);\n        });\n        for (const [k, v] of Object.entries(this._pH)) {\n          this._h.set(k, v);\n        }\n      }\n      headers ?? (headers = {});\n      for (const [k, v] of Object.entries(headers)) {\n        if (typeof v === \"string\") {\n          this._h.set(k, v);\n        } else {\n          this._h.delete(k);\n          for (const v2 of v) {\n            this._h.append(k, v2);\n          }\n        }\n      }\n      return new Response(data, {\n        status,\n        headers: this._h\n      });\n    };\n    this.body = (data, arg, headers) => {\n      return typeof arg === \"number\" ? this.newResponse(data, arg, headers) : this.newResponse(data, arg);\n    };\n    this.text = (text, arg, headers) => {\n      if (!this._pH) {\n        if (this._init && !headers && !arg) {\n          return new Response(text);\n        }\n        this._pH = {};\n      }\n      if (this._pH[\"content-type\"]) {\n        this._pH[\"content-type\"] = TEXT_PLAIN;\n      }\n      return typeof arg === \"number\" ? this.newResponse(text, arg, headers) : this.newResponse(text, arg);\n    };\n    this.json = (object, arg, headers) => {\n      const body = JSON.stringify(object);\n      this._pH ?? (this._pH = {});\n      this._pH[\"content-type\"] = \"application/json; charset=UTF-8\";\n      return typeof arg === \"number\" ? this.newResponse(body, arg, headers) : this.newResponse(body, arg);\n    };\n    this.jsonT = (object, arg, headers) => {\n      const response = typeof arg === \"number\" ? this.json(object, arg, headers) : this.json(object, arg);\n      return {\n        response,\n        data: object,\n        format: \"json\",\n        status: response.status\n      };\n    };\n    this.html = (html, arg, headers) => {\n      this._pH ?? (this._pH = {});\n      this._pH[\"content-type\"] = \"text/html; charset=UTF-8\";\n      if (typeof html === \"object\") {\n        if (!(html instanceof Promise)) {\n          html = html.toString();\n        }\n        if (html instanceof Promise) {\n          return html.then((html2) => {\n            return typeof arg === \"number\" ? this.newResponse(html2, arg, headers) : this.newResponse(html2, arg);\n          });\n        }\n      }\n      return typeof arg === \"number\" ? this.newResponse(html, arg, headers) : this.newResponse(html, arg);\n    };\n    this.redirect = (location, status = 302) => {\n      this._h ?? (this._h = new Headers());\n      this._h.set(\"Location\", location);\n      return this.newResponse(null, status);\n    };\n    this.streamText = (cb, arg, headers) => {\n      headers ?? (headers = {});\n      this.header(\"content-type\", TEXT_PLAIN);\n      this.header(\"x-content-type-options\", \"nosniff\");\n      this.header(\"transfer-encoding\", \"chunked\");\n      return this.stream(cb, arg, headers);\n    };\n    this.stream = (cb, arg, headers) => {\n      const { readable, writable } = new TransformStream();\n      const stream = new StreamingApi(writable);\n      cb(stream).finally(() => stream.close());\n      return typeof arg === \"number\" ? this.newResponse(readable, arg, headers) : this.newResponse(readable, arg);\n    };\n    this.cookie = (name, value, opt) => {\n      const cookie = serialize(name, value, opt);\n      this.header(\"set-cookie\", cookie, { append: true });\n    };\n    this.notFound = () => {\n      return this.notFoundHandler(this);\n    };\n    this.req = req;\n    if (options) {\n      this._exCtx = options.executionCtx;\n      this.env = options.env;\n      if (options.notFoundHandler) {\n        this.notFoundHandler = options.notFoundHandler;\n      }\n    }\n  }\n  get event() {\n    if (this._exCtx && \"respondWith\" in this._exCtx) {\n      return this._exCtx;\n    } else {\n      throw Error(\"This context has no FetchEvent\");\n    }\n  }\n  get executionCtx() {\n    if (this._exCtx) {\n      return this._exCtx;\n    } else {\n      throw Error(\"This context has no ExecutionContext\");\n    }\n  }\n  get res() {\n    this._init = false;\n    return this._res || (this._res = new Response(\"404 Not Found\", { status: 404 }));\n  }\n  set res(_res) {\n    this._init = false;\n    if (this._res && _res) {\n      this._res.headers.delete(\"content-type\");\n      this._res.headers.forEach((v, k) => {\n        _res.headers.set(k, v);\n      });\n    }\n    this._res = _res;\n    this.finalized = true;\n  }\n  get var() {\n    return { ...this._var };\n  }\n  get runtime() {\n    const global = globalThis;\n    if (global?.Deno !== void 0) {\n      return \"deno\";\n    }\n    if (global?.Bun !== void 0) {\n      return \"bun\";\n    }\n    if (typeof global?.WebSocketPair === \"function\") {\n      return \"workerd\";\n    }\n    if (typeof global?.EdgeRuntime === \"string\") {\n      return \"edge-light\";\n    }\n    if (global?.fastly !== void 0) {\n      return \"fastly\";\n    }\n    if (global?.__lagon__ !== void 0) {\n      return \"lagon\";\n    }\n    if (global?.process?.release?.name === \"node\") {\n      return \"node\";\n    }\n    return \"other\";\n  }\n};\nexport {\n  Context\n};\n", "// src/compose.ts\nimport { Context } from \"./context.js\";\nvar compose = (middleware, onError, onNotFound) => {\n  return (context, next) => {\n    let index = -1;\n    return dispatch(0);\n    async function dispatch(i) {\n      if (i <= index) {\n        throw new Error(\"next() called multiple times\");\n      }\n      index = i;\n      let res;\n      let isError = false;\n      let handler;\n      if (middleware[i]) {\n        handler = middleware[i][0];\n        if (context instanceof Context) {\n          context.req.setParams(middleware[i][1]);\n        }\n      } else {\n        handler = i === middleware.length && next || void 0;\n      }\n      if (!handler) {\n        if (context instanceof Context && context.finalized === false && onNotFound) {\n          res = onNotFound(context);\n        }\n      } else {\n        try {\n          res = await handler(context, () => {\n            return dispatch(i + 1);\n          });\n        } catch (err) {\n          if (err instanceof Error && context instanceof Context && onError) {\n            context.error = err;\n            res = onError(err, context);\n            isError = true;\n          } else {\n            throw err;\n          }\n        }\n      }\n      if (res !== void 0 && \"response\" in res) {\n        res = res[\"response\"];\n      }\n      if (res && (context.finalized === false || isError)) {\n        context.res = res;\n      }\n      return context;\n    }\n  };\n};\nexport {\n  compose\n};\n", "// src/http-exception.ts\nvar HTTPException = class extends Error {\n  constructor(status = 500, options) {\n    super(options?.message);\n    this.res = options?.res;\n    this.status = status;\n  }\n  getResponse() {\n    if (this.res) {\n      return this.res;\n    }\n    return new Response(this.message, {\n      status: this.status\n    });\n  }\n};\nexport {\n  HTTPException\n};\n", "// src/utils/body.ts\nvar isArrayField = (value) => {\n  return Array.isArray(value);\n};\nvar parseBody = async (request, options = {\n  all: false\n}) => {\n  let body = {};\n  const contentType = request.headers.get(\"Content-Type\");\n  if (contentType && (contentType.startsWith(\"multipart/form-data\") || contentType.startsWith(\"application/x-www-form-urlencoded\"))) {\n    const formData = await request.formData();\n    if (formData) {\n      const form = {};\n      formData.forEach((value, key) => {\n        const shouldParseAllValues = options.all || key.slice(-2) === \"[]\";\n        if (!shouldParseAllValues) {\n          form[key] = value;\n          return;\n        }\n        if (form[key] && isArrayField(form[key])) {\n          ;\n          form[key].push(value);\n          return;\n        }\n        if (form[key]) {\n          form[key] = [form[key], value];\n          return;\n        }\n        form[key] = value;\n      });\n      body = form;\n    }\n  }\n  return body;\n};\nexport {\n  parseBody\n};\n", "// src/request.ts\nimport { parseBody } from \"./utils/body.js\";\nimport { parse } from \"./utils/cookie.js\";\nimport { getQueryParam, getQueryParams, decodeURIComponent_ } from \"./utils/url.js\";\nvar HonoRequest = class {\n  constructor(request, path = \"/\", paramStash = []) {\n    this._p = {};\n    this.bodyCache = {};\n    this.cachedBody = (key) => {\n      const { bodyCache, raw } = this;\n      const cachedBody = bodyCache[key];\n      if (cachedBody)\n        return cachedBody;\n      if (bodyCache.arrayBuffer) {\n        return (async () => {\n          return await new Response(bodyCache.arrayBuffer)[key]();\n        })();\n      }\n      return bodyCache[key] = raw[key]();\n    };\n    this.raw = request;\n    this.path = path;\n    this._s = paramStash;\n    this.vData = {};\n  }\n  setParams(params) {\n    this._p = params;\n  }\n  param(key) {\n    if (this._s) {\n      if (key) {\n        const param = this._s[this._p[key]] ?? this._p[key];\n        return param ? /\\%/.test(param) ? decodeURIComponent_(param) : param : void 0;\n      } else {\n        const decoded = {};\n        const keys = Object.keys(this._p);\n        for (let i = 0, len = keys.length; i < len; i++) {\n          const key2 = keys[i];\n          const value = this._s[this._p[key2]] ?? this._p[key2];\n          if (value && typeof value === \"string\") {\n            decoded[key2] = /\\%/.test(value) ? decodeURIComponent_(value) : value;\n          }\n        }\n        return decoded;\n      }\n    }\n    return null;\n  }\n  query(key) {\n    return getQueryParam(this.url, key);\n  }\n  queries(key) {\n    return getQueryParams(this.url, key);\n  }\n  header(name) {\n    if (name)\n      return this.raw.headers.get(name.toLowerCase()) ?? void 0;\n    const headerData = {};\n    this.raw.headers.forEach((value, key) => {\n      headerData[key] = value;\n    });\n    return headerData;\n  }\n  cookie(key) {\n    const cookie = this.raw.headers.get(\"Cookie\");\n    if (!cookie)\n      return;\n    const obj = parse(cookie);\n    if (key) {\n      const value = obj[key];\n      return value;\n    } else {\n      return obj;\n    }\n  }\n  async parseBody(options) {\n    if (this.bodyCache.parsedBody)\n      return this.bodyCache.parsedBody;\n    const parsedBody = await parseBody(this, options);\n    this.bodyCache.parsedBody = parsedBody;\n    return parsedBody;\n  }\n  json() {\n    return this.cachedBody(\"json\");\n  }\n  text() {\n    return this.cachedBody(\"text\");\n  }\n  arrayBuffer() {\n    return this.cachedBody(\"arrayBuffer\");\n  }\n  blob() {\n    return this.cachedBody(\"blob\");\n  }\n  formData() {\n    return this.cachedBody(\"formData\");\n  }\n  addValidatedData(target, data) {\n    this.vData[target] = data;\n  }\n  valid(target) {\n    return this.vData[target];\n  }\n  get url() {\n    return this.raw.url;\n  }\n  get method() {\n    return this.raw.method;\n  }\n  get headers() {\n    return this.raw.headers;\n  }\n  get body() {\n    return this.raw.body;\n  }\n  get bodyUsed() {\n    return this.raw.bodyUsed;\n  }\n  get integrity() {\n    return this.raw.integrity;\n  }\n  get keepalive() {\n    return this.raw.keepalive;\n  }\n  get referrer() {\n    return this.raw.referrer;\n  }\n  get signal() {\n    return this.raw.signal;\n  }\n};\nexport {\n  HonoRequest\n};\n", "// src/router.ts\nvar METHOD_NAME_ALL = \"ALL\";\nvar METHOD_NAME_ALL_LOWERCASE = \"all\";\nvar METHODS = [\"get\", \"post\", \"put\", \"delete\", \"options\", \"patch\"];\nvar UnsupportedPathError = class extends Error {\n};\nexport {\n  METHODS,\n  METHOD_NAME_ALL,\n  METHOD_NAME_ALL_LOWERCASE,\n  UnsupportedPathError\n};\n", "// src/hono-base.ts\nimport { compose } from \"./compose.js\";\nimport { Context } from \"./context.js\";\nimport { HTTPException } from \"./http-exception.js\";\nimport { HonoRequest } from \"./request.js\";\nimport { METHOD_NAME_ALL, METHOD_NAME_ALL_LOWERCASE, METHODS } from \"./router.js\";\nimport { getPath, getPathNoStrict, getQueryStrings, mergePath } from \"./utils/url.js\";\nfunction defineDynamicClass() {\n  return class {\n  };\n}\nvar notFoundHandler = (c) => {\n  return c.text(\"404 Not Found\", 404);\n};\nvar errorHandler = (err, c) => {\n  if (err instanceof HTTPException) {\n    return err.getResponse();\n  }\n  console.error(err);\n  const message = \"Internal Server Error\";\n  return c.text(message, 500);\n};\nvar Hono = class extends defineDynamicClass() {\n  constructor(options = {}) {\n    super();\n    this._basePath = \"/\";\n    this.path = \"/\";\n    this.routes = [];\n    this.notFoundHandler = notFoundHandler;\n    this.errorHandler = errorHandler;\n    this.head = () => {\n      console.warn(\"`app.head()` is no longer used. `app.get()` implicitly handles the HEAD method.\");\n      return this;\n    };\n    this.handleEvent = (event) => {\n      return this.dispatch(event.request, event, void 0, event.request.method);\n    };\n    this.fetch = (request, Env, executionCtx) => {\n      return this.dispatch(request, executionCtx, Env, request.method);\n    };\n    this.request = (input, requestInit, Env, executionCtx) => {\n      if (input instanceof Request) {\n        if (requestInit !== void 0) {\n          input = new Request(input, requestInit);\n        }\n        return this.fetch(input, Env, executionCtx);\n      }\n      input = input.toString();\n      const path = /^https?:\\/\\//.test(input) ? input : `http://localhost${mergePath(\"/\", input)}`;\n      const req = new Request(path, requestInit);\n      return this.fetch(req, Env, executionCtx);\n    };\n    this.fire = () => {\n      addEventListener(\"fetch\", (event) => {\n        event.respondWith(this.dispatch(event.request, event, void 0, event.request.method));\n      });\n    };\n    const allMethods = [...METHODS, METHOD_NAME_ALL_LOWERCASE];\n    allMethods.map((method) => {\n      this[method] = (args1, ...args) => {\n        if (typeof args1 === \"string\") {\n          this.path = args1;\n        } else {\n          this.addRoute(method, this.path, args1);\n        }\n        args.map((handler) => {\n          if (typeof handler !== \"string\") {\n            this.addRoute(method, this.path, handler);\n          }\n        });\n        return this;\n      };\n    });\n    this.on = (method, path, ...handlers) => {\n      if (!method)\n        return this;\n      this.path = path;\n      for (const m of [method].flat()) {\n        handlers.map((handler) => {\n          this.addRoute(m.toUpperCase(), this.path, handler);\n        });\n      }\n      return this;\n    };\n    this.use = (arg1, ...handlers) => {\n      if (typeof arg1 === \"string\") {\n        this.path = arg1;\n      } else {\n        handlers.unshift(arg1);\n      }\n      handlers.map((handler) => {\n        this.addRoute(METHOD_NAME_ALL, this.path, handler);\n      });\n      return this;\n    };\n    const strict = options.strict ?? true;\n    delete options.strict;\n    Object.assign(this, options);\n    this.getPath = strict ? options.getPath ?? getPath : getPathNoStrict;\n  }\n  clone() {\n    const clone = new Hono({\n      router: this.router,\n      getPath: this.getPath\n    });\n    clone.routes = this.routes;\n    return clone;\n  }\n  route(path, app) {\n    const subApp = this.basePath(path);\n    if (!app) {\n      return subApp;\n    }\n    app.routes.map((r) => {\n      const handler = app.errorHandler === errorHandler ? r.handler : async (c, next) => (await compose([], app.errorHandler)(c, () => r.handler(c, next))).res;\n      subApp.addRoute(r.method, r.path, handler);\n    });\n    return this;\n  }\n  basePath(path) {\n    const subApp = this.clone();\n    subApp._basePath = mergePath(this._basePath, path);\n    return subApp;\n  }\n  onError(handler) {\n    this.errorHandler = handler;\n    return this;\n  }\n  notFound(handler) {\n    this.notFoundHandler = handler;\n    return this;\n  }\n  showRoutes() {\n    const length = 8;\n    this.routes.map((route) => {\n      console.log(\n        `\\x1B[32m${route.method}\\x1B[0m ${\" \".repeat(length - route.method.length)} ${route.path}`\n      );\n    });\n  }\n  mount(path, applicationHandler, optionHandler) {\n    const mergedPath = mergePath(this._basePath, path);\n    const pathPrefixLength = mergedPath === \"/\" ? 0 : mergedPath.length;\n    const handler = async (c, next) => {\n      let executionContext = void 0;\n      try {\n        executionContext = c.executionCtx;\n      } catch {\n      }\n      const options = optionHandler ? optionHandler(c) : [c.env, executionContext];\n      const optionsArray = Array.isArray(options) ? options : [options];\n      const queryStrings = getQueryStrings(c.req.url);\n      const res = await applicationHandler(\n        new Request(\n          new URL((c.req.path.slice(pathPrefixLength) || \"/\") + queryStrings, c.req.url),\n          c.req.raw\n        ),\n        ...optionsArray\n      );\n      if (res)\n        return res;\n      await next();\n    };\n    this.addRoute(METHOD_NAME_ALL, mergePath(path, \"*\"), handler);\n    return this;\n  }\n  get routerName() {\n    this.matchRoute(\"GET\", \"/\");\n    return this.router.name;\n  }\n  addRoute(method, path, handler) {\n    method = method.toUpperCase();\n    path = mergePath(this._basePath, path);\n    this.router.add(method, path, handler);\n    const r = { path, method, handler };\n    this.routes.push(r);\n  }\n  matchRoute(method, path) {\n    return this.router.match(method, path);\n  }\n  handleError(err, c) {\n    if (err instanceof Error) {\n      return this.errorHandler(err, c);\n    }\n    throw err;\n  }\n  dispatch(request, executionCtx, env, method) {\n    if (method === \"HEAD\") {\n      return (async () => new Response(null, await this.dispatch(request, executionCtx, env, \"GET\")))();\n    }\n    const path = this.getPath(request, { env });\n    const [handlers, paramStash] = this.matchRoute(method, path);\n    const c = new Context(new HonoRequest(request, path, paramStash || []), {\n      env,\n      executionCtx,\n      notFoundHandler: this.notFoundHandler\n    });\n    if (handlers.length === 1) {\n      let res;\n      c.req.setParams(handlers[0][1]);\n      try {\n        res = handlers[0][0](c, async () => {\n        });\n        if (!res) {\n          return this.notFoundHandler(c);\n        }\n      } catch (err) {\n        return this.handleError(err, c);\n      }\n      if (res instanceof Response)\n        return res;\n      if (\"response\" in res) {\n        res = res.response;\n      }\n      if (res instanceof Response)\n        return res;\n      return (async () => {\n        let awaited;\n        try {\n          awaited = await res;\n          if (awaited !== void 0 && \"response\" in awaited) {\n            awaited = awaited[\"response\"];\n          }\n          if (!awaited) {\n            return this.notFoundHandler(c);\n          }\n        } catch (err) {\n          return this.handleError(err, c);\n        }\n        return awaited;\n      })();\n    }\n    const composed = compose(handlers, this.errorHandler, this.notFoundHandler);\n    return (async () => {\n      try {\n        const context = await composed(c);\n        if (!context.finalized) {\n          throw new Error(\n            \"Context is not finalized. You may forget returning Response object or `await next()`\"\n          );\n        }\n        return context.res;\n      } catch (err) {\n        return this.handleError(err, c);\n      }\n    })();\n  }\n};\nexport {\n  Hono as HonoBase\n};\n", "// src/router/reg-exp-router/node.ts\nvar LABEL_REG_EXP_STR = \"[^/]+\";\nvar ONLY_WILDCARD_REG_EXP_STR = \".*\";\nvar TAIL_WILDCARD_REG_EXP_STR = \"(?:|/.*)\";\nvar PATH_ERROR = Symbol();\nfunction compareKey(a, b) {\n  if (a.length === 1) {\n    return b.length === 1 ? a < b ? -1 : 1 : -1;\n  }\n  if (b.length === 1) {\n    return 1;\n  }\n  if (a === ONLY_WILDCARD_REG_EXP_STR || a === TAIL_WILDCARD_REG_EXP_STR) {\n    return 1;\n  } else if (b === ONLY_WILDCARD_REG_EXP_STR || b === TAIL_WILDCARD_REG_EXP_STR) {\n    return -1;\n  }\n  if (a === LABEL_REG_EXP_STR) {\n    return 1;\n  } else if (b === LABEL_REG_EXP_STR) {\n    return -1;\n  }\n  return a.length === b.length ? a < b ? -1 : 1 : b.length - a.length;\n}\nvar Node = class {\n  constructor() {\n    this.children = {};\n  }\n  insert(tokens, index, paramMap, context, pathErrorCheckOnly) {\n    if (tokens.length === 0) {\n      if (this.index !== void 0) {\n        throw PATH_ERROR;\n      }\n      if (pathErrorCheckOnly) {\n        return;\n      }\n      this.index = index;\n      return;\n    }\n    const [token, ...restTokens] = tokens;\n    const pattern = token === \"*\" ? restTokens.length === 0 ? [\"\", \"\", ONLY_WILDCARD_REG_EXP_STR] : [\"\", \"\", LABEL_REG_EXP_STR] : token === \"/*\" ? [\"\", \"\", TAIL_WILDCARD_REG_EXP_STR] : token.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n    let node;\n    if (pattern) {\n      const name = pattern[1];\n      let regexpStr = pattern[2] || LABEL_REG_EXP_STR;\n      if (name && pattern[2]) {\n        regexpStr = regexpStr.replace(/^\\((?!\\?:)(?=[^)]+\\)$)/, \"(?:\");\n        if (/\\((?!\\?:)/.test(regexpStr)) {\n          throw PATH_ERROR;\n        }\n      }\n      node = this.children[regexpStr];\n      if (!node) {\n        if (Object.keys(this.children).some(\n          (k) => k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.children[regexpStr] = new Node();\n        if (name !== \"\") {\n          node.varIndex = context.varIndex++;\n        }\n      }\n      if (!pathErrorCheckOnly && name !== \"\") {\n        paramMap.push([name, node.varIndex]);\n      }\n    } else {\n      node = this.children[token];\n      if (!node) {\n        if (Object.keys(this.children).some(\n          (k) => k.length > 1 && k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.children[token] = new Node();\n      }\n    }\n    node.insert(restTokens, index, paramMap, context, pathErrorCheckOnly);\n  }\n  buildRegExpStr() {\n    const childKeys = Object.keys(this.children).sort(compareKey);\n    const strList = childKeys.map((k) => {\n      const c = this.children[k];\n      return (typeof c.varIndex === \"number\" ? `(${k})@${c.varIndex}` : k) + c.buildRegExpStr();\n    });\n    if (typeof this.index === \"number\") {\n      strList.unshift(`#${this.index}`);\n    }\n    if (strList.length === 0) {\n      return \"\";\n    }\n    if (strList.length === 1) {\n      return strList[0];\n    }\n    return \"(?:\" + strList.join(\"|\") + \")\";\n  }\n};\nexport {\n  Node,\n  PATH_ERROR\n};\n", "// src/router/reg-exp-router/trie.ts\nimport { Node } from \"./node.js\";\nvar Trie = class {\n  constructor() {\n    this.context = { varIndex: 0 };\n    this.root = new Node();\n  }\n  insert(path, index, pathErrorCheckOnly) {\n    const paramAssoc = [];\n    const groups = [];\n    for (let i = 0; ; ) {\n      let replaced = false;\n      path = path.replace(/\\{[^}]+\\}/g, (m) => {\n        const mark = `@\\\\${i}`;\n        groups[i] = [mark, m];\n        i++;\n        replaced = true;\n        return mark;\n      });\n      if (!replaced) {\n        break;\n      }\n    }\n    const tokens = path.match(/(?::[^\\/]+)|(?:\\/\\*$)|./g) || [];\n    for (let i = groups.length - 1; i >= 0; i--) {\n      const [mark] = groups[i];\n      for (let j = tokens.length - 1; j >= 0; j--) {\n        if (tokens[j].indexOf(mark) !== -1) {\n          tokens[j] = tokens[j].replace(mark, groups[i][1]);\n          break;\n        }\n      }\n    }\n    this.root.insert(tokens, index, paramAssoc, this.context, pathErrorCheckOnly);\n    return paramAssoc;\n  }\n  buildRegExp() {\n    let regexp = this.root.buildRegExpStr();\n    if (regexp === \"\") {\n      return [/^$/, [], []];\n    }\n    let captureIndex = 0;\n    const indexReplacementMap = [];\n    const paramReplacementMap = [];\n    regexp = regexp.replace(/#(\\d+)|@(\\d+)|\\.\\*\\$/g, (_, handlerIndex, paramIndex) => {\n      if (typeof handlerIndex !== \"undefined\") {\n        indexReplacementMap[++captureIndex] = Number(handlerIndex);\n        return \"$()\";\n      }\n      if (typeof paramIndex !== \"undefined\") {\n        paramReplacementMap[Number(paramIndex)] = ++captureIndex;\n        return \"\";\n      }\n      return \"\";\n    });\n    return [new RegExp(`^${regexp}`), indexReplacementMap, paramReplacementMap];\n  }\n};\nexport {\n  Trie\n};\n", "// src/router/reg-exp-router/router.ts\nimport { METHOD_NAME_ALL, METHODS, UnsupportedPathError } from \"../../router.js\";\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { PATH_ERROR } from \"./node.js\";\nimport { Trie } from \"./trie.js\";\nvar methodNames = [METHOD_NAME_ALL, ...METHODS].map((method) => method.toUpperCase());\nvar emptyParam = [];\nvar nullMatcher = [/^$/, [], {}];\nvar wildcardRegExpCache = {};\nfunction buildWildcardRegExp(path) {\n  return wildcardRegExpCache[path] ?? (wildcardRegExpCache[path] = new RegExp(\n    path === \"*\" ? \"\" : `^${path.replace(/\\/\\*/, \"(?:|/.*)\")}$`\n  ));\n}\nfunction clearWildcardRegExpCache() {\n  wildcardRegExpCache = {};\n}\nfunction buildMatcherFromPreprocessedRoutes(routes) {\n  const trie = new Trie();\n  const handlerData = [];\n  if (routes.length === 0) {\n    return nullMatcher;\n  }\n  const routesWithStaticPathFlag = routes.map(\n    (route) => [!/\\*|\\/:/.test(route[0]), ...route]\n  ).sort(\n    ([isStaticA, pathA], [isStaticB, pathB]) => isStaticA ? 1 : isStaticB ? -1 : pathA.length - pathB.length\n  );\n  const staticMap = {};\n  for (let i = 0, j = -1, len = routesWithStaticPathFlag.length; i < len; i++) {\n    const [pathErrorCheckOnly, path, handlers] = routesWithStaticPathFlag[i];\n    if (pathErrorCheckOnly) {\n      staticMap[path] = [handlers.map(([h]) => [h, {}]), emptyParam];\n    } else {\n      j++;\n    }\n    let paramAssoc;\n    try {\n      paramAssoc = trie.insert(path, j, pathErrorCheckOnly);\n    } catch (e) {\n      throw e === PATH_ERROR ? new UnsupportedPathError(path) : e;\n    }\n    if (pathErrorCheckOnly) {\n      continue;\n    }\n    handlerData[j] = handlers.map(([h, paramCount]) => {\n      const paramIndexMap = {};\n      paramCount -= 1;\n      for (; paramCount >= 0; paramCount--) {\n        const [key, value] = paramAssoc[paramCount];\n        paramIndexMap[key] = value;\n      }\n      return [h, paramIndexMap];\n    });\n  }\n  const [regexp, indexReplacementMap, paramReplacementMap] = trie.buildRegExp();\n  for (let i = 0, len = handlerData.length; i < len; i++) {\n    for (let j = 0, len2 = handlerData[i].length; j < len2; j++) {\n      const map = handlerData[i][j]?.[1];\n      if (!map) {\n        continue;\n      }\n      const keys = Object.keys(map);\n      for (let k = 0, len3 = keys.length; k < len3; k++) {\n        map[keys[k]] = paramReplacementMap[map[keys[k]]];\n      }\n    }\n  }\n  const handlerMap = [];\n  for (const i in indexReplacementMap) {\n    handlerMap[i] = handlerData[indexReplacementMap[i]];\n  }\n  return [regexp, handlerMap, staticMap];\n}\nfunction findMiddleware(middleware, path) {\n  if (!middleware) {\n    return void 0;\n  }\n  for (const k of Object.keys(middleware).sort((a, b) => b.length - a.length)) {\n    if (buildWildcardRegExp(k).test(path)) {\n      return [...middleware[k]];\n    }\n  }\n  return void 0;\n}\nvar RegExpRouter = class {\n  constructor() {\n    this.name = \"RegExpRouter\";\n    this.middleware = { [METHOD_NAME_ALL]: {} };\n    this.routes = { [METHOD_NAME_ALL]: {} };\n  }\n  add(method, path, handler) {\n    var _a;\n    const { middleware, routes } = this;\n    if (!middleware || !routes) {\n      throw new Error(\"Can not add a route since the matcher is already built.\");\n    }\n    if (methodNames.indexOf(method) === -1)\n      methodNames.push(method);\n    if (!middleware[method]) {\n      ;\n      [middleware, routes].forEach((handlerMap) => {\n        handlerMap[method] = {};\n        Object.keys(handlerMap[METHOD_NAME_ALL]).forEach((p) => {\n          handlerMap[method][p] = [...handlerMap[METHOD_NAME_ALL][p]];\n        });\n      });\n    }\n    if (path === \"/*\") {\n      path = \"*\";\n    }\n    const paramCount = (path.match(/\\/:/g) || []).length;\n    if (/\\*$/.test(path)) {\n      const re = buildWildcardRegExp(path);\n      if (method === METHOD_NAME_ALL) {\n        Object.keys(middleware).forEach((m) => {\n          var _a2;\n          (_a2 = middleware[m])[path] || (_a2[path] = findMiddleware(middleware[m], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || []);\n        });\n      } else {\n        (_a = middleware[method])[path] || (_a[path] = findMiddleware(middleware[method], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || []);\n      }\n      Object.keys(middleware).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(middleware[m]).forEach((p) => {\n            re.test(p) && middleware[m][p].push([handler, paramCount]);\n          });\n        }\n      });\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(routes[m]).forEach(\n            (p) => re.test(p) && routes[m][p].push([handler, paramCount])\n          );\n        }\n      });\n      return;\n    }\n    const paths = checkOptionalParameter(path) || [path];\n    for (let i = 0, len = paths.length; i < len; i++) {\n      const path2 = paths[i];\n      Object.keys(routes).forEach((m) => {\n        var _a2;\n        if (method === METHOD_NAME_ALL || method === m) {\n          (_a2 = routes[m])[path2] || (_a2[path2] = [\n            ...findMiddleware(middleware[m], path2) || findMiddleware(middleware[METHOD_NAME_ALL], path2) || []\n          ]);\n          routes[m][path2].push([\n            handler,\n            paths.length === 2 && i === 0 ? paramCount - 1 : paramCount\n          ]);\n        }\n      });\n    }\n  }\n  match(method, path) {\n    clearWildcardRegExpCache();\n    const matchers = this.buildAllMatchers();\n    this.match = (method2, path2) => {\n      const matcher = matchers[method2];\n      const staticMatch = matcher[2][path2];\n      if (staticMatch) {\n        return staticMatch;\n      }\n      const match = path2.match(matcher[0]);\n      if (!match) {\n        return [[], emptyParam];\n      }\n      const index = match.indexOf(\"\", 1);\n      return [matcher[1][index], match];\n    };\n    return this.match(method, path);\n  }\n  buildAllMatchers() {\n    const matchers = {};\n    methodNames.forEach((method) => {\n      matchers[method] = this.buildMatcher(method) || matchers[METHOD_NAME_ALL];\n    });\n    this.middleware = this.routes = void 0;\n    return matchers;\n  }\n  buildMatcher(method) {\n    const routes = [];\n    let hasOwnRoute = method === METHOD_NAME_ALL;\n    [this.middleware, this.routes].forEach((r) => {\n      const ownRoute = r[method] ? Object.keys(r[method]).map((path) => [path, r[method][path]]) : [];\n      if (ownRoute.length !== 0) {\n        hasOwnRoute || (hasOwnRoute = true);\n        routes.push(...ownRoute);\n      } else if (method !== METHOD_NAME_ALL) {\n        routes.push(\n          ...Object.keys(r[METHOD_NAME_ALL]).map((path) => [path, r[METHOD_NAME_ALL][path]])\n        );\n      }\n    });\n    if (!hasOwnRoute) {\n      return null;\n    } else {\n      return buildMatcherFromPreprocessedRoutes(routes);\n    }\n  }\n};\nexport {\n  RegExpRouter\n};\n", "// src/router/smart-router/router.ts\nimport { UnsupportedPathError } from \"../../router.js\";\nvar SmartRouter = class {\n  constructor(init) {\n    this.name = \"SmartRouter\";\n    this.routers = [];\n    this.routes = [];\n    Object.assign(this, init);\n  }\n  add(method, path, handler) {\n    if (!this.routes) {\n      throw new Error(\"Can not add a route since the matcher is already built.\");\n    }\n    this.routes.push([method, path, handler]);\n  }\n  match(method, path) {\n    if (!this.routes) {\n      throw new Error(\"Fatal error\");\n    }\n    const { routers, routes } = this;\n    const len = routers.length;\n    let i = 0;\n    let res;\n    for (; i < len; i++) {\n      const router = routers[i];\n      try {\n        routes.forEach((args) => {\n          router.add(...args);\n        });\n        res = router.match(method, path);\n      } catch (e) {\n        if (e instanceof UnsupportedPathError) {\n          continue;\n        }\n        throw e;\n      }\n      this.match = router.match.bind(router);\n      this.routers = [router];\n      this.routes = void 0;\n      break;\n    }\n    if (i === len) {\n      throw new Error(\"Fatal error\");\n    }\n    this.name = `SmartRouter + ${this.activeRouter.name}`;\n    return res;\n  }\n  get activeRouter() {\n    if (this.routes || this.routers.length !== 1) {\n      throw new Error(\"No active router has been determined yet.\");\n    }\n    return this.routers[0];\n  }\n};\nexport {\n  SmartRouter\n};\n", "// src/router/trie-router/node.ts\nimport { METHOD_NAME_ALL } from \"../../router.js\";\nimport { splitPath, splitRoutingPath, getPattern } from \"../../utils/url.js\";\nvar Node = class {\n  constructor(method, handler, children) {\n    this.order = 0;\n    this.params = {};\n    this.children = children || {};\n    this.methods = [];\n    this.name = \"\";\n    if (method && handler) {\n      const m = {};\n      m[method] = { handler, params: {}, possibleKeys: [], score: 0, name: this.name };\n      this.methods = [m];\n    }\n    this.patterns = [];\n  }\n  insert(method, path, handler) {\n    this.name = `${method} ${path}`;\n    this.order = ++this.order;\n    let curNode = this;\n    const parts = splitRoutingPath(path);\n    const possibleKeys = [];\n    const parentPatterns = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const p = parts[i];\n      if (Object.keys(curNode.children).includes(p)) {\n        parentPatterns.push(...curNode.patterns);\n        curNode = curNode.children[p];\n        const pattern2 = getPattern(p);\n        if (pattern2)\n          possibleKeys.push(pattern2[1]);\n        continue;\n      }\n      curNode.children[p] = new Node();\n      const pattern = getPattern(p);\n      if (pattern) {\n        curNode.patterns.push(pattern);\n        parentPatterns.push(...curNode.patterns);\n        possibleKeys.push(pattern[1]);\n      }\n      parentPatterns.push(...curNode.patterns);\n      curNode = curNode.children[p];\n    }\n    if (!curNode.methods.length) {\n      curNode.methods = [];\n    }\n    const m = {};\n    const handlerSet = {\n      handler,\n      params: {},\n      possibleKeys,\n      name: this.name,\n      score: this.order\n    };\n    m[method] = handlerSet;\n    curNode.methods.push(m);\n    return curNode;\n  }\n  gHSets(node, method, params) {\n    const handlerSets = [];\n    for (let i = 0, len = node.methods.length; i < len; i++) {\n      const m = node.methods[i];\n      const handlerSet = m[method] || m[METHOD_NAME_ALL];\n      if (handlerSet !== void 0) {\n        handlerSet.possibleKeys.map((key) => {\n          handlerSet.params[key] = params[key];\n        });\n        handlerSets.push(handlerSet);\n      }\n    }\n    return handlerSets;\n  }\n  search(method, path) {\n    const handlerSets = [];\n    const params = {};\n    this.params = {};\n    const curNode = this;\n    let curNodes = [curNode];\n    const parts = splitPath(path);\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const part = parts[i];\n      const isLast = i === len - 1;\n      const tempNodes = [];\n      for (let j = 0, len2 = curNodes.length; j < len2; j++) {\n        const node = curNodes[j];\n        const nextNode = node.children[part];\n        if (nextNode) {\n          if (isLast === true) {\n            if (nextNode.children[\"*\"]) {\n              handlerSets.push(\n                ...this.gHSets(nextNode.children[\"*\"], method, { ...params, ...node.params })\n              );\n            }\n            handlerSets.push(...this.gHSets(nextNode, method, { ...params, ...node.params }));\n          } else {\n            tempNodes.push(nextNode);\n          }\n        }\n        for (let k = 0, len3 = node.patterns.length; k < len3; k++) {\n          const pattern = node.patterns[k];\n          if (pattern === \"*\") {\n            const astNode = node.children[\"*\"];\n            if (astNode) {\n              handlerSets.push(...this.gHSets(astNode, method, { ...params, ...node.params }));\n              tempNodes.push(astNode);\n            }\n            continue;\n          }\n          if (part === \"\")\n            continue;\n          const [key, name, matcher] = pattern;\n          const child = node.children[key];\n          const restPathString = parts.slice(i).join(\"/\");\n          if (matcher instanceof RegExp && matcher.test(restPathString)) {\n            params[name] = restPathString;\n            handlerSets.push(...this.gHSets(child, method, { ...params, ...node.params }));\n            continue;\n          }\n          if (matcher === true || matcher instanceof RegExp && matcher.test(part)) {\n            if (typeof key === \"string\") {\n              params[name] = part;\n              if (isLast === true) {\n                handlerSets.push(...this.gHSets(child, method, { ...params, ...node.params }));\n                if (child.children[\"*\"]) {\n                  handlerSets.push(\n                    ...this.gHSets(child.children[\"*\"], method, { ...params, ...node.params })\n                  );\n                }\n              } else {\n                child.params = { ...params };\n                tempNodes.push(child);\n              }\n            }\n          }\n        }\n      }\n      curNodes = tempNodes;\n    }\n    const results = handlerSets.sort((a, b) => {\n      return a.score - b.score;\n    });\n    return [results.map(({ handler, params: params2 }) => [handler, params2])];\n  }\n};\nexport {\n  Node\n};\n", "// src/router/trie-router/router.ts\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { Node } from \"./node.js\";\nvar TrieRouter = class {\n  constructor() {\n    this.name = \"TrieRouter\";\n    this.node = new Node();\n  }\n  add(method, path, handler) {\n    const results = checkOptionalParameter(path);\n    if (results) {\n      for (const p of results) {\n        this.node.insert(method, p, handler);\n      }\n      return;\n    }\n    this.node.insert(method, path, handler);\n  }\n  match(method, path) {\n    return this.node.search(method, path);\n  }\n};\nexport {\n  TrieRouter\n};\n", "// src/hono.ts\nimport { HonoBase } from \"./hono-base.js\";\nimport { RegExpRouter } from \"./router/reg-exp-router/index.js\";\nimport { SmartRouter } from \"./router/smart-router/index.js\";\nimport { TrieRouter } from \"./router/trie-router/index.js\";\nvar Hono = class extends HonoBase {\n  constructor(options = {}) {\n    super(options);\n    this.router = options.router ?? new SmartRouter({\n      routers: [new RegExpRouter(), new TrieRouter()]\n    });\n  }\n};\nexport {\n  Hono\n};\n", "export const API_URL = 'https://www2.deepl.com/jsonrpc';\nexport const REQUEST_ALTERNATIVES = 3;\nexport const SUPPORTED_LANGUAGES = [\n  'el',\n  'bg',\n  'lv',\n  'ko',\n  'lt',\n  'id',\n  'uk',\n  'sl',\n  'sk',\n  'tr',\n  'ro',\n  'cs',\n  'et',\n  'fi',\n  'da',\n  'hu',\n  'sv',\n  'nb',\n  'ru',\n  'pl',\n  'pt',\n  'nl',\n  'it',\n  'es',\n  'fr',\n  'de',\n  'ja',\n  'en',\n  'zh',\n] as const;\n", "import {\n  RequestParams,\n  RawResponseParams,\n  ResponseParams,\n  Config,\n} from './types';\nimport { API_URL, REQUEST_ALTERNATIVES } from './const';\n\nfunction buildRequestParams(sourceLang = 'auto', targetLang = 'en') {\n  return {\n    jsonrpc: '2.0',\n    method: 'LMT_handle_texts',\n    id: Math.floor(Math.random() * 100000 + 100000) * 1000,\n    params: {\n      texts: [{ text: '', requestAlternatives: REQUEST_ALTERNATIVES }],\n      timestamp: 0,\n      splitting: 'newlines',\n      lang: {\n        source_lang_user_selected: sourceLang?.toUpperCase(),\n        target_lang: targetLang?.toUpperCase(),\n      },\n    },\n  };\n}\n\nfunction countLetterI(translateText: string) {\n  return (translateText || '').split('i').length - 1;\n}\n\nfunction getTimestamp(letterCount: number) {\n  const timestamp = new Date().getTime();\n  return letterCount !== 0\n    ? timestamp - (timestamp % (letterCount + 1)) + (letterCount + 1)\n    : timestamp;\n}\n\nfunction buildRequestBody(data: RequestParams) {\n  const requestData = buildRequestParams(data.source_lang, data.target_lang);\n  requestData.params.texts = [\n    { text: data.text, requestAlternatives: REQUEST_ALTERNATIVES },\n  ];\n  requestData.params.timestamp = getTimestamp(countLetterI(data.text));\n\n  let requestString = JSON.stringify(requestData);\n  if (\n    [0, 3].includes((requestData['id'] + 5) % 29) ||\n    (requestData['id'] + 3) % 13 === 0\n  ) {\n    requestString = requestString.replace('\"method\":\"', '\"method\" : \"');\n  } else {\n    requestString = requestString.replace('\"method\":\"', '\"method\": \"');\n  }\n\n  return requestString;\n}\n\nasync function query(\n  params: RequestParams,\n  config?: Config\n): Promise<ResponseParams> {\n  if (!params?.text) {\n    return {\n      code: 404,\n      message: 'No Translate Text Found',\n      data: null,\n    };\n  }\n\n  const response = await fetch(config?.proxyEndpoint ?? API_URL, {\n    headers: {\n      'Content-Type': 'application/json; charset=utf-8',\n      ...config?.customHeader,\n    },\n    method: 'POST',\n    body: buildRequestBody(params),\n  });\n\n  if (response.ok) {\n    const { result } = (await response.json()) as RawResponseParams;\n    return {\n      code: 200,\n      message: 'success',\n      data: result?.texts?.[0]?.text,\n      source_lang: params?.source_lang || 'auto',\n      target_lang: params?.target_lang || 'en',\n      alternatives: result.texts?.[0]?.alternatives?.map?.(item => item.text),\n    };\n  } else {\n    return {\n      code: response.status,\n      data: null,\n      message:\n        response.status === 429\n          ? 'Too many requests, please try again later.'\n          : 'Unknown error.',\n    };\n  }\n}\n\nexport { query };\n", "import { Hono } from \"hono\";\nimport { query } from \"@ifyour/deeplx\";\n\nconst app = new Hono();\n\napp\n  .get(\"/\", (c) => c.redirect(\"/translate\"))\n  .get(\"/translate\", (c) => c.text(\"Please use POST method :)\"))\n  .post(\"/translate\", async (c) => {\n    const params = await c.req.json().catch(() => ({}));\n    const result = await query(params, {\n      proxyEndpoint: \"https://ideepl.vercel.app/jsonrpc\",\n    });\n    return c.json(result, result.code);\n  });\n\nexport default app;\n"],
  "mappings": "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",
  "names": ["splitPath", "path", "paths", "splitRoutingPath", "groups", "i", "replaced", "m", "mark", "j", "patternCache", "getPattern", "label", "match", "getPath", "request", "getQueryStrings", "url", "queryIndex", "getPathNoStrict", "result", "mergePath", "p", "endsWithSlash", "checkOptionalParameter", "base", "optional", "_decodeURI", "value", "decodeURIComponent_", "_getQueryParam", "key", "multiple", "encoded", "keyIndex2", "trailingKeyCode", "valueIndex", "endIndex", "results", "keyIndex", "nextKeyIndex", "name", "getQueryParam", "getQueryParams", "validCookieNameRegEx", "validCookieValueRegEx", "parse", "cookie", "name", "parsedCookie", "pairStr", "valueStartPos", "cookieName", "cookieValue", "decodeURIComponent_", "_serialize", "name", "value", "opt", "cookie", "serialize", "StreamingApi", "writable", "input", "ms", "res", "body", "TEXT_PLAIN", "Context", "req", "options", "content", "args", "renderer", "name", "value", "status", "key", "data", "arg", "headers", "res", "contentType", "k", "v", "v2", "text", "object", "body", "response", "html", "html2", "location", "cb", "readable", "writable", "stream", "StreamingApi", "opt", "cookie", "serialize", "_res", "global", "compose", "middleware", "onError", "onNotFound", "context", "next", "index", "dispatch", "i", "res", "isError", "handler", "Context", "err", "HTTPException", "status", "options", "isArrayField", "value", "parseBody", "request", "options", "body", "contentType", "formData", "form", "key", "HonoRequest", "request", "path", "paramStash", "key", "bodyCache", "raw", "cachedBody", "params", "param", "decodeURIComponent_", "decoded", "keys", "i", "len", "key2", "value", "getQueryParam", "getQueryParams", "name", "headerData", "cookie", "obj", "parse", "options", "parsedBody", "parseBody", "target", "data", "METHOD_NAME_ALL", "METHOD_NAME_ALL_LOWERCASE", "METHODS", "UnsupportedPathError", "defineDynamicClass", "notFoundHandler", "c", "errorHandler", "err", "HTTPException", "message", "Hono", "options", "event", "request", "Env", "executionCtx", "input", "requestInit", "path", "mergePath", "req", "METHODS", "METHOD_NAME_ALL_LOWERCASE", "method", "args1", "args", "handler", "handlers", "m", "arg1", "METHOD_NAME_ALL", "strict", "getPath", "getPathNoStrict", "clone", "app", "subApp", "r", "next", "compose", "route", "applicationHandler", "optionHandler", "mergedPath", "pathPrefixLength", "executionContext", "optionsArray", "queryStrings", "getQueryStrings", "res", "env", "paramStash", "Context", "HonoRequest", "awaited", "composed", "context", "LABEL_REG_EXP_STR", "ONLY_WILDCARD_REG_EXP_STR", "TAIL_WILDCARD_REG_EXP_STR", "PATH_ERROR", "compareKey", "a", "b", "Node", "tokens", "index", "paramMap", "context", "pathErrorCheckOnly", "token", "restTokens", "pattern", "node", "name", "regexpStr", "k", "strList", "c", "Trie", "Node", "path", "index", "pathErrorCheckOnly", "paramAssoc", "groups", "i", "replaced", "m", "mark", "tokens", "j", "regexp", "captureIndex", "indexReplacementMap", "paramReplacementMap", "_", "handlerIndex", "paramIndex", "methodNames", "METHOD_NAME_ALL", "METHODS", "method", "emptyParam", "nullMatcher", "wildcardRegExpCache", "buildWildcardRegExp", "path", "clearWildcardRegExpCache", "buildMatcherFromPreprocessedRoutes", "routes", "trie", "Trie", "handlerData", "routesWithStaticPathFlag", "route", "isStaticA", "pathA", "isStaticB", "pathB", "staticMap", "i", "j", "len", "pathErrorCheckOnly", "handlers", "h", "paramAssoc", "e", "PATH_ERROR", "UnsupportedPathError", "paramCount", "paramIndexMap", "key", "value", "regexp", "indexReplacementMap", "paramReplacementMap", "len2", "map", "keys", "k", "len3", "handlerMap", "findMiddleware", "middleware", "a", "b", "RegExpRouter", "handler", "_a", "p", "re", "m", "_a2", "paths", "checkOptionalParameter", "path2", "matchers", "method2", "matcher", "staticMatch", "match", "index", "hasOwnRoute", "r", "ownRoute", "SmartRouter", "init", "method", "path", "handler", "routers", "routes", "len", "res", "router", "args", "e", "UnsupportedPathError", "Node", "method", "handler", "children", "m", "path", "curNode", "parts", "splitRoutingPath", "possibleKeys", "parentPatterns", "i", "len", "p", "pattern2", "getPattern", "pattern", "handlerSet", "node", "params", "handlerSets", "METHOD_NAME_ALL", "key", "curNodes", "splitPath", "part", "isLast", "tempNodes", "j", "len2", "nextNode", "k", "len3", "astNode", "name", "matcher", "child", "restPathString", "a", "b", "params2", "TrieRouter", "Node", "method", "path", "handler", "results", "checkOptionalParameter", "p", "Hono", "options", "SmartRouter", "RegExpRouter", "TrieRouter", "API_URL", "REQUEST_ALTERNATIVES", "buildRequestParams", "sourceLang", "targetLang", "jsonrpc", "method", "id", "Math", "floor", "random", "params", "texts", "text", "requestAlternatives", "timestamp", "splitting", "lang", "source_lang_user_selected", "_sourceLang", "toUpperCase", "target_lang", "_targetLang", "countLetterI", "translateText", "split", "length", "getTimestamp", "letterCount", "Date", "getTime", "buildRequestBody", "data", "requestData", "source_lang", "requestString", "JSON", "stringify", "includes", "replace", "query", "_x", "_x2", "_query", "apply", "arguments", "_asyncToGenerator", "_regeneratorRuntime", "mark", "_callee", "config", "_config$proxyEndpoint", "response", "_result$texts", "_result$texts2", "_yield$response$json", "result", "wrap", "_context", "prev", "next", "abrupt", "code", "message", "fetch", "proxyEndpoint", "headers", "_extends", "customHeader", "body", "sent", "ok", "json", "alternatives", "map", "item", "status", "stop", "app", "Hono", "c", "params", "result", "query", "src_default"]
}
